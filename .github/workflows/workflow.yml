name: Glycemia SE Huangjie
on:
  pull_request:
    branches: [ "*" ]
  push:
    branches: [ "*" ]
jobs:
   cleanup:
    runs-on: ubuntu-latest
    permissions: write-all

    steps:
      - name: ðŸ—‘ Delete deployment
        uses: strumwolf/delete-deployment-environment@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          environment: SERVER_WITH_PUBLIC_IP
          onlyRemoveDeployments: true
   project-build:
    runs-on: ubuntu-latest
    environment: SERVER
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: Set up the Maven dependencies caching
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Install Maven dependencies
        run: mvn install
        env:
          DB_USERNAME: ${{ secrets.DB_USERNAME }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          DB_URL: ${{ secrets.DB_URL }}
      
      - name: copy file via ssh password
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          password: ${{ secrets.PASSWORD }}
          port: ${{ secrets.PORT }}
          source: target/backend-0.0.1-SNAPSHOT.jar
          target: $JAR_HOME
      - name: Deploy the application
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          password: ${{ secrets.PASSWORD }}
          port: ${{ secrets.PORT }}
          script: | 
            mv $JAR_HOME/target/backend-0.0.1-SNAPSHOT.jar $JAR_HOME/backend-0.0.1-SNAPSHOT.jar
            echo "Kill existing tomcat process"
            killtomcat.sh
            echo "Run tomcat(background)"
            nohup java -jar $JAR_HOME/backend-0.0.1-SNAPSHOT.jar > tomcat.log 2>&1 &
            echo "Show tomcat logs"
            cat tomcat.log
      - name: Upload JAR as Artifact
        uses: actions/upload-artifact@v2
        with:
          name: Maven Jar File
          path: target/${{ env.JAR_NAME }}
      - name: Run tests
        run: mvn --batch-mode --update-snapshots verify
        env:
          DB_USERNAME: ${{ secrets.DB_USERNAME }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          DB_URL: ${{ secrets.DB_URL }}
 
