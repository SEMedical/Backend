name: Glycemia SE Huangjie
on:
  pull_request:
    branches: [ docker ]
    paths:
      - '**'
      - '.github/workflows/app-workflow.yaml'
  push:
    branches: [ docker ]
    paths:
      - '**'
      - '.github/workflows/app-workflow.yaml'

jobs:
  project-build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: Set up the Maven dependencies caching
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Install Maven dependencies
        run: mvn install
        env:
          DB_USERNAME: ${{ secrets.DB_USERNAME }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          DB_URL: ${{ secrets.DB_URL }}
      - name: Run tests
        run: mvn --batch-mode --update-snapshots verify
        env:
          DB_USERNAME: ${{ secrets.DB_USERNAME }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          DB_URL: ${{ secrets.DB_URL }}
  docker-build:
    if: ${{ github.ref == 'refs/heads/docker' }}
    runs-on: ubuntu-latest
    needs:
      - project-build
    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Dashboard to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          file: Dockerfile-app
          push: true
          tags: ${{ secrets.DOCKERHUB_TAG01 }}
  cleanup:
    runs-on: ubuntu-latest
    permissions: write-all

    steps:
      - name: ðŸ—‘ Delete deployment
        uses: strumwolf/delete-deployment-environment@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          environment: SERVER
          onlyRemoveDeployments: true
  deploy:
    if: ${{ github.ref == 'refs/heads/docker' }}
    runs-on: ubuntu-latest
    environment: SERVER
    needs:
      - docker-build
    steps:
      - uses: actions/checkout@v3
      - name: Set execute permission for deploy.sh
        run: |
          chmod 777 deploy.sh
      - name: Add Server key
        run: |
          touch key.txt && echo "${{ secrets.KEY }}" > key.txt
          chmod 600 key.txt
      - name: Deploy the application
        env:
          SERVER_HOST: ${{ secrets.HOST }}
          SERVER_PORT: ${{ secrets.PORT }}
          SERVER_USER: ${{ secrets.USER }}
        run: |
          set -e
          ./deploy.sh
